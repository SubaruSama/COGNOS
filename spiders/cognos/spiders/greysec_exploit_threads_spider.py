import scrapy
from scrapy.spiders import Rule, CrawlSpider
from scrapy.linkextractors import LinkExtractor

class ForumContent(scrapy.Item):
    username = scrapy.Field()
    posts_quantity = scrapy.Field()
    date_joined = scrapy.Field()
    reputation = scrapy.Field()
    info_date_post = scrapy.Field()
    post_content = scrapy.Field()

class GreySecExploitDevSpider(CrawlSpider):
    name = 'grey_sec_exploit_dev_section'
    allowed_domains = ['greysec.net']
    start_urls = [
        'http://greysec.net/forumdisplay.php?fid=46'
    ]
    custom_settings = {
        'LOG_LEVEL': 'INFO'
    }

    # rule_forum_category = Rule(LinkExtractor(allow=('forumdisplay\.php\?fid\=46')))
    # rule_forum_thread = Rule(
    #         LinkExtractor(
    #         allow=('showthread\.php\?tid\=\d{0,4}'), 
    #         ),
    #         callback='parse',
    #         follow=True
    #     )

    # rules = [
    #     # rule_forum_category,
    #     Rule(
    #         LinkExtractor(
    #         allow=('showthread\.php\?tid\=\d{0,4}'), 
    #         ),
    #         callback='parse',
    #         follow=True
    #     )
    # ]

    def start_requests(self):
        # urls = ['https://greysec.net/forumdisplay.php?fid=46']
        #for url in self.start_urls:
        yield scrapy.Request(url=self.start_urls[0], callback=self.extract_URL_from_forumdisplay)

    def extract_URL_from_forumdisplay(self, response):
        css_link_pattern = 'tr.inline_row:nth-child(n) > td:nth-child(n) > div:nth-child(n) > span:nth-child(n) > span a::attr(href)'
        paths = response.selector.css(css_link_pattern).getall()
        for path in paths:
            yield scrapy.Request(
                url='https://{allowed_domains}/{path}'.format(allowed_domains=self.allowed_domains[0], 
                path=path
                ), 
                callback=self.extract_contents_from_thread
                )

    def extract_contents_from_thread(self, response):
        pass

    def parse(self, response):
        self.logger.info('----------- I\'am at the Page: %s -----------', response.url)
        self.logger.info('----------- Title: %s -----------', response.xpath('/html/head/title/text()').get())
        forum_content = ForumContent()
        forum_content['username'] = response.selector.css('table.tborder:nth-child(n) > tbody:nth-child(n)').get()
        forum_content['posts_quantity'] = response.xpath('/html/body/div[1]/div/div[4]/table/tbody/tr[2]/td/div/div[1]/div[1]/div[3]/div[1]')
        forum_content['date_joined'] = ''
        forum_content['reputation'] = ''
        forum_content['info_date_post'] = ''
        forum_content['post_content'] = ''
        print(forum_content)
        return forum_content
        